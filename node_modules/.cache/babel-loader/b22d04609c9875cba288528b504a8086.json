{"ast":null,"code":"import * as loginAction from \"../actions/loginAction\";\nimport { LoginUser, SignOut } from \"../../utility/generalMethods\";\nimport * as apiActions from \"../actions/apiAction\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  token: \"\"\n};\n\nconst loginReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  let newState = { ...state\n  };\n\n  switch (type) {\n    case loginAction.LOGIN:\n      {\n        return { ...payload\n        };\n      }\n\n    case loginAction.LOGOUT:\n      {\n        return { ...initialState\n        };\n      }\n\n    default:\n      return newState;\n  }\n};\n\nexport const loginUser = data => {\n  return async dispatch => {\n    await dispatch(apiActions.fetchRequest());\n    return LoginUser(data).then(res => {\n      const cred = res.data;\n      dispatch(apiActions.fetchSuccess(cred));\n      dispatch(loginAction.LoginAction(cred));\n      return res;\n    }).catch(error => {\n      dispatch(apiActions.fetchError(error.message));\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    await dispatch(apiActions.fetchRequest());\n    return SignOut().then(() => {\n      dispatch(apiActions.fetchSuccess({}));\n      dispatch(loginAction.LogoutAction());\n    }).catch(error => {\n      dispatch(apiActions.fetchError(error.message));\n    });\n  };\n};\nexport default loginReducer;","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/redux/reducers/LoginReducer.js"],"names":["loginAction","LoginUser","SignOut","apiActions","initialState","email","password","token","loginReducer","state","action","type","payload","newState","LOGIN","LOGOUT","loginUser","data","dispatch","fetchRequest","then","res","cred","fetchSuccess","LoginAction","catch","error","fetchError","message","signOut","LogoutAction"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,8BAAnC;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACA,MAAIG,QAAQ,GAAG,EAAE,GAAGJ;AAAL,GAAf;;AACA,UAAQE,IAAR;AACE,SAAKX,WAAW,CAACc,KAAjB;AAAwB;AACtB,eAAO,EACL,GAAGF;AADE,SAAP;AAGD;;AACD,SAAKZ,WAAW,CAACe,MAAjB;AAAyB;AACvB,eAAO,EACL,GAAGX;AADE,SAAP;AAGD;;AAED;AACE,aAAOS,QAAP;AAbJ;AAeD,CAlBD;;AAoBA,OAAO,MAAMG,SAAS,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMA,QAAQ,CAACf,UAAU,CAACgB,YAAX,EAAD,CAAd;AACA,WAAOlB,SAAS,CAACgB,IAAD,CAAT,CACJG,IADI,CACEC,GAAD,IAAS;AACb,YAAMC,IAAI,GAAGD,GAAG,CAACJ,IAAjB;AACAC,MAAAA,QAAQ,CAACf,UAAU,CAACoB,YAAX,CAAwBD,IAAxB,CAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAClB,WAAW,CAACwB,WAAZ,CAAwBF,IAAxB,CAAD,CAAR;AAEA,aAAOD,GAAP;AACD,KAPI,EAQJI,KARI,CAQGC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACf,UAAU,CAACwB,UAAX,CAAsBD,KAAK,CAACE,OAA5B,CAAD,CAAR;AACD,KAVI,CAAP;AAWD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAO,MAAOX,QAAP,IAAoB;AACzB,UAAMA,QAAQ,CAACf,UAAU,CAACgB,YAAX,EAAD,CAAd;AACA,WAAOjB,OAAO,GACXkB,IADI,CACC,MAAM;AACVF,MAAAA,QAAQ,CAACf,UAAU,CAACoB,YAAX,CAAwB,EAAxB,CAAD,CAAR;AACAL,MAAAA,QAAQ,CAAClB,WAAW,CAAC8B,YAAZ,EAAD,CAAR;AACD,KAJI,EAKJL,KALI,CAKGC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACf,UAAU,CAACwB,UAAX,CAAsBD,KAAK,CAACE,OAA5B,CAAD,CAAR;AACD,KAPI,CAAP;AAQD,GAVD;AAWD,CAZM;AAcP,eAAepB,YAAf","sourcesContent":["import * as loginAction from \"../actions/loginAction\";\nimport { LoginUser, SignOut } from \"../../utility/generalMethods\";\nimport * as apiActions from \"../actions/apiAction\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  token: \"\",\n};\n\nconst loginReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  let newState = { ...state };\n  switch (type) {\n    case loginAction.LOGIN: {\n      return {\n        ...payload,\n      };\n    }\n    case loginAction.LOGOUT: {\n      return {\n        ...initialState,\n      };\n    }\n\n    default:\n      return newState;\n  }\n};\n\nexport const loginUser = (data) => {\n  return async (dispatch) => {\n    await dispatch(apiActions.fetchRequest());\n    return LoginUser(data)\n      .then((res) => {\n        const cred = res.data;\n        dispatch(apiActions.fetchSuccess(cred));\n        dispatch(loginAction.LoginAction(cred));\n\n        return res;\n      })\n      .catch((error) => {\n        dispatch(apiActions.fetchError(error.message));\n      });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    await dispatch(apiActions.fetchRequest());\n    return SignOut()\n      .then(() => {\n        dispatch(apiActions.fetchSuccess({}));\n        dispatch(loginAction.LogoutAction());\n      })\n      .catch((error) => {\n        dispatch(apiActions.fetchError(error.message));\n      });\n  };\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}
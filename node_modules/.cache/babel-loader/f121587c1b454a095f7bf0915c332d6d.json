{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\cookbook-app\\\\cookbook-app\\\\src\\\\components\\\\recipes\\\\favourites\\\\favourites.js\";\nimport React, { Component } from \"react\";\nimport { fetchAllRecipes, MakeFavourite, RemoveFavourite } from \"../../../redux/reducers/recipesReducer\";\nimport { IsLoggedIn } from \"../../../utility/generalMethods\";\nimport SingleRecipe from \"../SingleRecipe/SingleRecipe\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FavouriteRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearch = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n      let updatedRecipes = this.state.favourites;\n      updatedRecipes = updatedRecipes.filter(item => {\n        return item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filteredRecipes: updatedRecipes\n      });\n    };\n\n    this.loadRecipes = async () => {\n      let {\n        recipes\n      } = this.props.recipes;\n\n      try {\n        if (recipes && recipes.length) {\n          const favourites = recipes.filter(fav => fav.isFavourite);\n          this.setState({\n            filteredRecipes: [...favourites],\n            favourites\n          });\n        } else {\n          recipes = await this.props.fetchingAllRecipes();\n\n          if (recipes && recipes.length) {\n            const favourites = recipes.filter(fav => fav.isFavourite);\n            this.setState({\n              filteredRecipes: [...favourites],\n              favourites\n            });\n          } else {\n            throw new Error(\"Recipes are Empty\");\n          }\n        }\n      } catch (error) {\n        console.log(error.message);\n        return;\n      }\n    };\n\n    this.toggleFavourite = id => {\n      let recipes = this.state.favourites;\n      let filtered = this.state.filteredRecipes; //FIRST METHOD TO FIND FAVOURITES\n\n      if (recipes && recipes.length) {\n        let Index = recipes.findIndex(val => val.id == id);\n\n        if (recipes[Index]) {\n          const {\n            isFavourite\n          } = recipes[Index];\n\n          if (isFavourite) {\n            this.props.RemoveFavourite(recipes[Index], id);\n            recipes = recipes.filter(rec => rec.id != id);\n            filtered = filtered.filter(fav => fav.id != id);\n            this.setState({\n              filteredRecipes: [...filtered],\n              favourites: [...recipes]\n            });\n          }\n        }\n      }\n    };\n\n    this.handleRedirection = id => {\n      this.props.history.push(`/recipes/view/${id}`);\n    };\n\n    this.state = {\n      searchText: \"\",\n      favourites: [],\n      filteredRecipes: []\n    };\n  }\n\n  componentDidMount() {\n    if (!IsLoggedIn()) {\n      this.history.push(\"/auth/login\");\n    }\n\n    this.loadRecipes();\n  }\n\n  render() {\n    const {\n      Api\n    } = this.props;\n    let {\n      searchText,\n      filteredRecipes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      className: \"recipeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"row search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"bannerImgWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../images/login_banner.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-search form-control-feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Search\",\n            onChange: this.onSearch,\n            value: searchText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Recipes main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"float-left\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [Api.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"loading-text\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 30\n          }, this) : null, filteredRecipes.length == 0 && !Api.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Recipe Favourite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this) : filteredRecipes.map((recipe, idx) => {\n            return /*#__PURE__*/_createElement(SingleRecipe, { ...recipe,\n              toggleFavourite: this.toggleFavourite,\n              key: idx,\n              onClick: this.handleRedirection,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }\n            });\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes,\n    Api: state.Api\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchingAllRecipes: () => dispatch(fetchAllRecipes()),\n  RemoveFavourite: (recipe, id) => dispatch(RemoveFavourite(recipe, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FavouriteRecipe));","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/components/recipes/favourites/favourites.js"],"names":["React","Component","fetchAllRecipes","MakeFavourite","RemoveFavourite","IsLoggedIn","SingleRecipe","connect","withRouter","FavouriteRecipe","constructor","props","onSearch","e","setState","searchText","target","value","updatedRecipes","state","favourites","filter","item","name","toLowerCase","search","filteredRecipes","loadRecipes","recipes","length","fav","isFavourite","fetchingAllRecipes","Error","error","console","log","message","toggleFavourite","id","filtered","Index","findIndex","val","rec","handleRedirection","history","push","componentDidMount","render","Api","isLoading","map","recipe","idx","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  fetchAllRecipes,\n  MakeFavourite,\n  RemoveFavourite,\n} from \"../../../redux/reducers/recipesReducer\";\nimport { IsLoggedIn } from \"../../../utility/generalMethods\";\nimport SingleRecipe from \"../SingleRecipe/SingleRecipe\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FavouriteRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      favourites: [],\n      filteredRecipes: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!IsLoggedIn()) {\n      this.history.push(\"/auth/login\");\n    }\n\n    this.loadRecipes();\n  }\n\n  onSearch = (e) => {\n    this.setState({\n      searchText: e.target.value,\n    });\n\n    let updatedRecipes = this.state.favourites;\n\n    updatedRecipes = updatedRecipes.filter((item) => {\n      return (\n        item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1\n      );\n    });\n\n    this.setState({ filteredRecipes: updatedRecipes });\n  };\n\n  loadRecipes = async () => {\n    let { recipes } = this.props.recipes;\n\n    try {\n      if (recipes && recipes.length) {\n        const favourites = recipes.filter((fav) => fav.isFavourite);\n\n        this.setState({\n          filteredRecipes: [...favourites],\n          favourites,\n        });\n      } else {\n        recipes = await this.props.fetchingAllRecipes();\n\n        if (recipes && recipes.length) {\n          const favourites = recipes.filter((fav) => fav.isFavourite);\n\n          this.setState({\n            filteredRecipes: [...favourites],\n            favourites,\n          });\n        } else {\n          throw new Error(\"Recipes are Empty\");\n        }\n      }\n    } catch (error) {\n      console.log(error.message);\n      return;\n    }\n  };\n\n  toggleFavourite = (id) => {\n    let recipes = this.state.favourites;\n    let filtered = this.state.filteredRecipes;\n    //FIRST METHOD TO FIND FAVOURITES\n    if (recipes && recipes.length) {\n      let Index = recipes.findIndex((val) => val.id == id);\n\n      if (recipes[Index]) {\n        const { isFavourite } = recipes[Index];\n\n        if (isFavourite) {\n          this.props.RemoveFavourite(recipes[Index], id);\n\n          recipes = recipes.filter((rec) => rec.id != id);\n          filtered = filtered.filter((fav) => fav.id != id);\n\n          this.setState({\n            filteredRecipes: [...filtered],\n            favourites: [...recipes],\n          });\n        }\n      }\n    }\n  };\n\n  handleRedirection = (id) => {\n    this.props.history.push(`/recipes/view/${id}`);\n  };\n\n  render() {\n    const { Api } = this.props;\n\n    let { searchText, filteredRecipes } = this.state;\n\n    return (\n      <div className=\"root\" className=\"recipeList\">\n        <header className=\"row search-bar\">\n          <div class=\"bannerImgWrapper\">\n            <img src=\"../../images/login_banner.jpg\" />\n          </div>\n\n          <div className=\"form-group\">\n            <span className=\"fa fa-search form-control-feedback\"></span>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              onChange={this.onSearch}\n              value={searchText}\n            />\n          </div>\n        </header>\n        <div className=\"Recipes main\">\n          <div className=\"heading\">\n            <span className=\"float-left\">\n              <h3>Recipes</h3>\n            </span>\n          </div>\n          <ul>\n            {Api.isLoading ? <p class=\"loading-text\">Loading...</p> : null}\n            {filteredRecipes.length == 0 && !Api.isLoading ? (\n              <p>No Recipe Favourite</p>\n            ) : (\n              filteredRecipes.map((recipe, idx) => {\n                return (\n                  <SingleRecipe\n                    {...recipe}\n                    toggleFavourite={this.toggleFavourite}\n                    key={idx}\n                    onClick={this.handleRedirection}\n                  />\n                );\n              })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n\n    Api: state.Api,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchingAllRecipes: () => dispatch(fetchAllRecipes()),\n\n  RemoveFavourite: (recipe, id) => dispatch(RemoveFavourite(recipe, id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(FavouriteRecipe));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\cookbook-app\\\\cookbook-app\\\\src\\\\components\\\\recipes\\\\recipeDetail\\\\RecipeDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as IngredientActions from \"../../../redux/actions/ingredientAction\";\nimport * as prepStepsAction from \"../../../redux/actions/prepStepsAction\";\nimport { NotificationHandler } from \"../../../utility/generalMethods\";\nimport Chips from \"../../General/Chips/Chips\";\nimport { validateInputs, validateSchema, AddRecipeSchema } from \"../../../utility/validation\";\nimport { fetchSingleRecipe, addRecipe, updateRecipe, deleteRecipe } from \"../../../redux/reducers/recipesReducer\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nconst initialValues = {\n  Name: \"\",\n  imageUrl: \"\",\n  votes: 1,\n  Ingredients: [],\n  prepSteps: [],\n  Serving: 1,\n  Cooktime: 1,\n  Description: \"\"\n};\n\nconst RecipeDetail = props => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const history = useHistory();\n  const params = useParams();\n  const [chipInput, setChipInput] = useState(\"\");\n  const [Status, SetStatus] = useState({\n    InProgress: false,\n    Failed: false,\n    FailMessage: \"\"\n  });\n  const [state, setState] = useState({ ...initialValues\n  });\n  const [Error, setError] = useState({\n    isError: false,\n    recipeImageError: false,\n    Name: \"\",\n    votes: \"\",\n    Ingredients: \"\",\n    prepSteps: \"\",\n    Serving: \"\",\n    Cooktime: \"\",\n    Description: \"\"\n  });\n  const [recipeImage, SetRecipeImage] = useState({\n    file: \"\",\n    preview: \"\"\n  });\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleAddChip = name => {\n    if (chipInput && chipInput.length > 0) {\n      setState({ ...state,\n        [name]: [...state[name], chipInput],\n        chipInput: \"\"\n      });\n\n      if (name === \"Ingredients\") {\n        props.addIngredient(chipInput);\n      } else if (name === \"prepSteps\") {\n        props.addPrepStep(chipInput);\n      }\n    }\n  };\n\n  const handleDeleteChip = (name, chip) => {\n    setState({ ...state,\n      [name]: state[name].filter(val => val != chip),\n      chipInput: \"\"\n    });\n\n    if (name === \"Ingredients\") {\n      props.deleteIngredient(chip);\n    } else if (name === \"prepSteps\") {\n      props.deletePrepSteps(chip);\n    }\n  };\n\n  const loadData = async () => {\n    let {\n      recipe_id\n    } = params;\n\n    if (recipe_id) {\n      setEditMode(true);\n      const Recipe = await props.getSingleRecipe(recipe_id);\n\n      if (Recipe) {\n        setState({\n          Name: Recipe.name,\n          imageUrl: Recipe.imageUrl,\n          votes: Recipe.votes,\n          Ingredients: Recipe.ingredients,\n          prepSteps: Recipe.steps,\n          Serving: Recipe.serving,\n          Cooktime: Recipe.cooktime,\n          Description: Recipe.description\n        });\n        SetRecipeImage({ ...recipeImage,\n          file: \"present\",\n          preview: Recipe.imageUrl\n        });\n      }\n    } else {\n      NotificationHandler(\"warning\", \"Invalid Recipe Id\");\n      return;\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const handleBlur = async e => {\n    const {\n      Error\n    } = state;\n    const {\n      name,\n      value\n    } = e.target;\n    const errorObj = await validateInputs(name, value, Error);\n    const {\n      isError,\n      errorMessage\n    } = errorObj;\n\n    if (isError) {\n      setError({ ...Error,\n        isError: true,\n        [name]: errorMessage\n      });\n    } else {\n      setError({ ...Error,\n        isError: false,\n        [name]: \"\"\n      });\n    }\n  };\n\n  const GoBack = () => {\n    window.history.back();\n  };\n\n  const handleImage = e => {\n    const file = e.target.files[0];\n\n    if (file == undefined) {\n      return;\n    }\n\n    if (Error.recipeImageError) {\n      setError({ ...Error,\n        recipeImageError: false\n      });\n    }\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      SetRecipeImage({\n        file: file,\n        preview: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file); // SetRecipeImage({\n    //   ...recipeImage,\n    //   file,\n    //   preview: URL.createObjectURL(file),\n    // });\n  };\n\n  const saveData = async data => {\n    try {\n      SetStatus({ ...Status,\n        InProgress: true,\n        Message: \"\",\n        Failed: false\n      });\n      let result; // Edit Process\n\n      if (editMode) {\n        data.id = params.recipe_id;\n        result = await props.updateRecipe(data);\n      } else {\n        result = await props.addRecipe(data);\n      }\n\n      if (result != null) {\n        SetStatus({ ...Status,\n          InProgress: false,\n          Failed: false\n        });\n        NotificationHandler(\"success\", \"Successfull\");\n        history.push(\"/recipes\");\n      } else {\n        throw result;\n      }\n    } catch (err) {\n      SetStatus({ ...Status,\n        Failed: true,\n        InProgress: false,\n        Message: err.message\n      });\n      NotificationHandler(\"error\", err.message);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let data = { ...state\n    };\n\n    if (!recipeImage.file) {\n      setError({ ...Error,\n        recipeImageError: true\n      });\n      return;\n    }\n\n    if (recipeImage.preview) {\n      data[\"imageUrl\"] = recipeImage.preview;\n      setState({ ...state,\n        imageUrl: recipeImage.preview\n      });\n    }\n\n    const errorObj = await validateSchema(AddRecipeSchema, data);\n\n    if (errorObj.isError) {\n      return;\n    }\n\n    data = {\n      name: state.Name,\n      imageUrl: data.imageUrl,\n      votes: state.votes,\n      ingredients: state.Ingredients,\n      steps: state.prepSteps,\n      serving: state.Serving,\n      cooktime: state.Cooktime,\n      description: state.Description\n    };\n    saveData(data);\n    return;\n  };\n\n  const showError = _fieldName => {\n    let error = Error[_fieldName];\n    return error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-block\",\n      children: error || \"Field Is Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back-button\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => GoBack(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../../images/back.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editMode ? \"Edit Recipe\" : \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main edit-recipe\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Add Photo \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"recipeUpload\",\n              className: \"img-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipeImage.preview ? recipeImage.preview : `${process.env.PUBLIC_URL}/images/dummy.png`,\n                alt: \"\",\n                for: \"recipeUpload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                class: \"form-control-file\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"recipeUpload\",\n                onChange: handleImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), Error.recipeImageError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controller-outer mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"err-block\",\n                children: \"Please select an image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Recipe Name\",\n              name: \"Name\",\n              value: state.Name,\n              onChange: handleChange,\n              className: \"form-control\",\n              required: true,\n              onBlur: handleBlur,\n              disabled: Status.InProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), showError(\"Name\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group edit-ingredients\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"Ingredients\",\n              children: \"Add Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Chips, {\n              name: \"Ingredients\",\n              placeholder: \"Add Ingredients\",\n              value: chipInput,\n              Items: state.Ingredients,\n              onDelete: handleDeleteChip,\n              onAdd: handleAddChip,\n              onChange: e => setChipInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Cooking time\",\n              children: \"Cooking TIme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              name: \"Cooktime\",\n              value: state.Cooktime,\n              id: \"Cooking time\",\n              disabled: Status.InProgress,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              placeholder: \"Cooking time in Minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), showError(\"Cooktime\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Serving\",\n              children: \"Number Of Serving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              disabled: Status.InProgress,\n              className: \"form-control\",\n              id: \"Serving\",\n              defaultValue: \"1\",\n              name: \"Serving\",\n              value: state.Serving,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8\",\n                children: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"9\",\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), showError(\"Serving\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"votes\",\n              children: \"Votes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"Votes\",\n              disabled: Status.InProgress,\n              defaultValue: state.votes,\n              name: \"votes\",\n              value: state.votes,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), showError(\"votes\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group description\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              disabled: Status.InProgress,\n              className: \"form-control\",\n              id: \"Description\",\n              rows: \"5\",\n              name: \"Description\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: state.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), showError(\"Description\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group preparation\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"prepSteps\",\n              children: \"Preparation Steps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Chips, {\n              name: \"prepSteps\",\n              placeholder: \"Add Directions \",\n              value: chipInput,\n              Items: state.prepSteps,\n              onDelete: handleDeleteChip,\n              onAdd: handleAddChip,\n              onChange: e => setChipInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), showError(\"prepSteps\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-center submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: Error.isError,\n              type: \"submit\",\n              className: \"button submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeDetail, \"iLJD4BOiR7xE8LThx+KUmg24sJY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = RecipeDetail;\n\nconst mapStateToProps = state => {\n  return {\n    currentRecipe: state.recipes.currentRecipe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getSingleRecipe: id => dispatch(fetchSingleRecipe(id)),\n  addIngredient: val => dispatch(IngredientActions.addIngredient(val)),\n  addPrepStep: val => dispatch(prepStepsAction.addPrepSteps(val)),\n  deleteIngredient: val => dispatch(IngredientActions.deleteIngredient(val)),\n  deletePrepSteps: val => dispatch(prepStepsAction.deletePrepSteps(val)),\n  addRecipe: data => dispatch(addRecipe(data)),\n  deleteRecipe: id => dispatch(deleteRecipe(id)),\n  updateRecipe: data => dispatch(updateRecipe(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/components/recipes/recipeDetail/RecipeDetail.js"],"names":["React","Component","useState","useEffect","useHistory","useParams","IngredientActions","prepStepsAction","NotificationHandler","Chips","validateInputs","validateSchema","AddRecipeSchema","fetchSingleRecipe","addRecipe","updateRecipe","deleteRecipe","connect","initialValues","Name","imageUrl","votes","Ingredients","prepSteps","Serving","Cooktime","Description","RecipeDetail","props","editMode","setEditMode","history","params","chipInput","setChipInput","Status","SetStatus","InProgress","Failed","FailMessage","state","setState","Error","setError","isError","recipeImageError","recipeImage","SetRecipeImage","file","preview","loadData","handleAddChip","name","length","addIngredient","addPrepStep","handleDeleteChip","chip","filter","val","deleteIngredient","deletePrepSteps","recipe_id","Recipe","getSingleRecipe","ingredients","steps","serving","cooktime","description","handleChange","e","value","target","handleBlur","errorObj","errorMessage","GoBack","window","back","handleImage","files","undefined","reader","FileReader","onloadend","result","readAsDataURL","saveData","data","Message","id","push","err","message","onSubmit","preventDefault","showError","_fieldName","error","process","env","PUBLIC_URL","display","mapStateToProps","currentRecipe","recipes","mapDispatchToProps","dispatch","addPrepSteps"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as IngredientActions from \"../../../redux/actions/ingredientAction\";\nimport * as prepStepsAction from \"../../../redux/actions/prepStepsAction\";\nimport { NotificationHandler } from \"../../../utility/generalMethods\";\nimport Chips from \"../../General/Chips/Chips\";\nimport {\n  validateInputs,\n  validateSchema,\n  AddRecipeSchema,\n} from \"../../../utility/validation\";\n\nimport {\n  fetchSingleRecipe,\n  addRecipe,\n  updateRecipe,\n  deleteRecipe,\n} from \"../../../redux/reducers/recipesReducer\";\nimport { connect } from \"react-redux\";\n\nimport \"./styles.scss\";\n\nconst initialValues = {\n  Name: \"\",\n  imageUrl: \"\",\n  votes: 1,\n\n  Ingredients: [],\n  prepSteps: [],\n  Serving: 1,\n  Cooktime: 1,\n  Description: \"\",\n};\n\nconst RecipeDetail = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const history = useHistory();\n  const params = useParams();\n  const [chipInput, setChipInput] = useState(\"\");\n  const [Status, SetStatus] = useState({\n    InProgress: false,\n    Failed: false,\n    FailMessage: \"\",\n  });\n\n  const [state, setState] = useState({ ...initialValues });\n\n  const [Error, setError] = useState({\n    isError: false,\n    recipeImageError: false,\n    Name: \"\",\n    votes: \"\",\n    Ingredients: \"\",\n    prepSteps: \"\",\n    Serving: \"\",\n    Cooktime: \"\",\n    Description: \"\",\n  });\n\n  const [recipeImage, SetRecipeImage] = useState({\n    file: \"\",\n    preview: \"\",\n  });\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleAddChip = (name) => {\n    if (chipInput && chipInput.length > 0) {\n      setState({\n        ...state,\n        [name]: [...state[name], chipInput],\n        chipInput: \"\",\n      });\n\n      if (name === \"Ingredients\") {\n        props.addIngredient(chipInput);\n      } else if (name === \"prepSteps\") {\n        props.addPrepStep(chipInput);\n      }\n    }\n  };\n\n  const handleDeleteChip = (name, chip) => {\n    setState({\n      ...state,\n      [name]: state[name].filter((val) => val != chip),\n      chipInput: \"\",\n    });\n\n    if (name === \"Ingredients\") {\n      props.deleteIngredient(chip);\n    } else if (name === \"prepSteps\") {\n      props.deletePrepSteps(chip);\n    }\n  };\n\n  const loadData = async () => {\n    let { recipe_id } = params;\n\n    if (recipe_id) {\n      setEditMode(true);\n\n      const Recipe = await props.getSingleRecipe(recipe_id);\n\n      if (Recipe) {\n        setState({\n          Name: Recipe.name,\n          imageUrl: Recipe.imageUrl,\n          votes: Recipe.votes,\n\n          Ingredients: Recipe.ingredients,\n          prepSteps: Recipe.steps,\n          Serving: Recipe.serving,\n          Cooktime: Recipe.cooktime,\n          Description: Recipe.description,\n        });\n\n        SetRecipeImage({\n          ...recipeImage,\n          file: \"present\",\n          preview: Recipe.imageUrl,\n        });\n      }\n    } else {\n      NotificationHandler(\"warning\", \"Invalid Recipe Id\");\n      return;\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleBlur = async (e) => {\n    const { Error } = state;\n    const { name, value } = e.target;\n\n    const errorObj = await validateInputs(name, value, Error);\n\n    const { isError, errorMessage } = errorObj;\n\n    if (isError) {\n      setError({\n        ...Error,\n        isError: true,\n        [name]: errorMessage,\n      });\n    } else {\n      setError({\n        ...Error,\n        isError: false,\n        [name]: \"\",\n      });\n    }\n  };\n\n  const GoBack = () => {\n    window.history.back();\n  };\n\n  const handleImage = (e) => {\n    const file = e.target.files[0];\n\n    if (file == undefined) {\n      return;\n    }\n\n    if (Error.recipeImageError) {\n      setError({\n        ...Error,\n        recipeImageError: false,\n      });\n    }\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      SetRecipeImage({\n        file: file,\n        preview: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n\n    // SetRecipeImage({\n    //   ...recipeImage,\n    //   file,\n    //   preview: URL.createObjectURL(file),\n    // });\n  };\n\n  const saveData = async (data) => {\n    try {\n      SetStatus({\n        ...Status,\n        InProgress: true,\n        Message: \"\",\n        Failed: false,\n      });\n\n      let result;\n\n      // Edit Process\n      if (editMode) {\n        data.id = params.recipe_id;\n        result = await props.updateRecipe(data);\n      } else {\n        result = await props.addRecipe(data);\n      }\n\n      if (result != null) {\n        SetStatus({\n          ...Status,\n          InProgress: false,\n          Failed: false,\n        });\n\n        NotificationHandler(\"success\", \"Successfull\");\n\n        history.push(\"/recipes\");\n      } else {\n        throw result;\n      }\n    } catch (err) {\n      SetStatus({\n        ...Status,\n        Failed: true,\n        InProgress: false,\n        Message: err.message,\n      });\n      NotificationHandler(\"error\", err.message);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    let data = { ...state };\n\n    if (!recipeImage.file) {\n      setError({\n        ...Error,\n        recipeImageError: true,\n      });\n      return;\n    }\n\n    if (recipeImage.preview) {\n      data[\"imageUrl\"] = recipeImage.preview;\n      setState({\n        ...state,\n        imageUrl: recipeImage.preview,\n      });\n    }\n\n    const errorObj = await validateSchema(AddRecipeSchema, data);\n\n    if (errorObj.isError) {\n      return;\n    }\n\n    data = {\n      name: state.Name,\n      imageUrl: data.imageUrl,\n      votes: state.votes,\n      ingredients: state.Ingredients,\n      steps: state.prepSteps,\n      serving: state.Serving,\n      cooktime: state.Cooktime,\n      description: state.Description,\n    };    \n    saveData(data);\n    return;\n  };\n\n  const showError = (_fieldName) => {\n    let error = Error[_fieldName];\n\n    return error ? (\n      <div className=\"error-block\">{error || \"Field Is Required\"}</div>\n    ) : null;\n  };\n\n  return (\n    <React.Fragment>\n      <header className=\"header\">\n        <div className=\"back-button\">\n          <span onClick={(e) => GoBack()}>\n            <img src=\"../../images/back.png\" />\n          </span>\n        </div>\n        <h3>{editMode ? \"Edit Recipe\" : \"Add Recipe\"}</h3>\n      </header>\n      <div className=\"main edit-recipe\">\n        <div className=\"item-content\">\n          <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n              <label>Add Photo </label>\n              <label htmlFor=\"recipeUpload\" className=\"img-wrap\">\n                <img\n                  src={\n                    recipeImage.preview\n                      ? recipeImage.preview\n                      : `${process.env.PUBLIC_URL}/images/dummy.png`\n                  }\n                  alt=\"\"\n                  for=\"recipeUpload\"\n                />\n\n                <input\n                  type=\"file\"\n                  class=\"form-control-file\"\n                  style={{ display: \"none\" }}\n                  id=\"recipeUpload\"\n                  onChange={handleImage}\n                />\n              </label>\n\n              {Error.recipeImageError ? (\n                <div className=\"controller-outer mb-3\">\n                  <div className=\"err-block\">{\"Please select an image\"}</div>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Name\">Name</label>\n\n              <input\n                type=\"text\"\n                placeholder=\"Recipe Name\"\n                name=\"Name\"\n                value={state.Name}\n                onChange={handleChange}\n                className=\"form-control\"\n                required={true}\n                onBlur={handleBlur}\n                disabled={Status.InProgress}\n              />\n              {showError(\"Name\")}\n            </div>\n            <div className=\"form-group edit-ingredients\">\n              <label for=\"Ingredients\">Add Ingredients</label>\n\n              <Chips\n                name=\"Ingredients\"\n                placeholder=\"Add Ingredients\"\n                value={chipInput}\n                Items={state.Ingredients}\n                onDelete={handleDeleteChip}\n                onAdd={handleAddChip}\n                onChange={(e) => setChipInput(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Cooking time\">Cooking TIme</label>\n\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                name=\"Cooktime\"\n                value={state.Cooktime}\n                id=\"Cooking time\"\n                disabled={Status.InProgress}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Cooking time in Minutes\"\n              />\n\n              {showError(\"Cooktime\")}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Serving\">Number Of Serving</label>\n              <select\n                disabled={Status.InProgress}\n                className=\"form-control\"\n                id=\"Serving\"\n                defaultValue=\"1\"\n                name=\"Serving\"\n                value={state.Serving}\n                onChange={handleChange}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n              {showError(\"Serving\")}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"votes\">Votes</label>\n              <select\n                className=\"form-control\"\n                id=\"Votes\"\n                disabled={Status.InProgress}\n                defaultValue={state.votes}\n                name=\"votes\"\n                value={state.votes}\n                onChange={handleChange}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n              </select>\n              {showError(\"votes\")}\n            </div>\n\n            <div className=\"form-group description\">\n              <label htmlFor=\"Description\">Description</label>\n              <textarea\n                disabled={Status.InProgress}\n                className=\"form-control\"\n                id=\"Description\"\n                rows=\"5\"\n                name=\"Description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={state.Description}\n              ></textarea>\n              {showError(\"Description\")}\n            </div>\n            <div className=\"form-group preparation\">\n              <label htmlFor=\"prepSteps\">Preparation Steps</label>\n\n              <Chips\n                name=\"prepSteps\"\n                placeholder=\"Add Directions \"\n                value={chipInput}\n                Items={state.prepSteps}\n                onDelete={handleDeleteChip}\n                onAdd={handleAddChip}\n                onChange={(e) => setChipInput(e.target.value)}\n              />\n              {showError(\"prepSteps\")}\n            </div>\n            <div className=\"form-group text-center submit\">\n              <button\n                disabled={Error.isError}\n                type=\"submit\"\n                className=\"button submit-button\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentRecipe: state.recipes.currentRecipe,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSingleRecipe: (id) => dispatch(fetchSingleRecipe(id)),\n\n  addIngredient: (val) => dispatch(IngredientActions.addIngredient(val)),\n  addPrepStep: (val) => dispatch(prepStepsAction.addPrepSteps(val)),\n  deleteIngredient: (val) => dispatch(IngredientActions.deleteIngredient(val)),\n  deletePrepSteps: (val) => dispatch(prepStepsAction.deletePrepSteps(val)),\n  addRecipe: (data) => dispatch(addRecipe(data)),\n  deleteRecipe: (id) => dispatch(deleteRecipe(id)),\n  updateRecipe: (data) => dispatch(updateRecipe(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeDetail);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import { getAllData, getSingleData } from \"../../utility/generalMethods\";\nimport * as apiActions from \"../actions/apiAction\";\nimport { GetAllData } from \"../../utility/apiService\";\nimport { Recipes } from \"../../utility/Endpoints\";\nlet initialState = {\n  isLoading: false,\n  error: \"\",\n  data: []\n};\n\nconst apiReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  let newState = { ...state\n  };\n\n  switch (type) {\n    case apiActions.FETCH_REQUEST:\n      {\n        return {\n          isLoading: true,\n          data: [],\n          error: \"\"\n        };\n      }\n\n    case apiActions.FETCH_SUCCESS:\n      {\n        return {\n          isLoading: false,\n          data: payload,\n          error: \"\"\n        };\n      }\n\n    case apiActions.FETCH_FAILED:\n      {\n        return {\n          isLoading: false,\n          data: [],\n          error: payload\n        };\n      }\n\n    default:\n      return newState;\n  }\n};\n\nexport default apiReducer;","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/redux/reducers/apiReducer.js"],"names":["apiActions","GetAllData","Recipes","initialState","isLoading","error","data","apiReducer","state","action","type","payload","newState","FETCH_REQUEST","FETCH_SUCCESS","FETCH_FAILED"],"mappings":"AAAA;AACA,OAAO,KAAKA,UAAZ,MAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAAnB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACA,MAAIG,QAAQ,GAAG,EAAE,GAAGJ;AAAL,GAAf;;AACA,UAAQE,IAAR;AACE,SAAKV,UAAU,CAACa,aAAhB;AAA+B;AAC7B,eAAO;AACLT,UAAAA,SAAS,EAAE,IADN;AAELE,UAAAA,IAAI,EAAE,EAFD;AAGLD,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKL,UAAU,CAACc,aAAhB;AAA+B;AAC7B,eAAO;AACLV,UAAAA,SAAS,EAAE,KADN;AAELE,UAAAA,IAAI,EAAEK,OAFD;AAGLN,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKL,UAAU,CAACe,YAAhB;AAA8B;AAC5B,eAAO;AACLX,UAAAA,SAAS,EAAE,KADN;AAELE,UAAAA,IAAI,EAAE,EAFD;AAGLD,UAAAA,KAAK,EAAEM;AAHF,SAAP;AAKD;;AACD;AACE,aAAOC,QAAP;AAvBJ;AAyBD,CA5BD;;AA8BA,eAAeL,UAAf","sourcesContent":["// import { getAllData, getSingleData } from \"../../utility/generalMethods\";\nimport * as apiActions from \"../actions/apiAction\";\nimport { GetAllData } from \"../../utility/apiService\";\nimport { Recipes } from \"../../utility/Endpoints\";\n\nlet initialState = {\n  isLoading: false,\n  error: \"\",\n  data: [],\n};\n\nconst apiReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  let newState = { ...state };\n  switch (type) {\n    case apiActions.FETCH_REQUEST: {\n      return {\n        isLoading: true,\n        data: [],\n        error: \"\",\n      };\n    }\n    case apiActions.FETCH_SUCCESS: {\n      return {\n        isLoading: false,\n        data: payload,\n        error: \"\",\n      };\n    }\n    case apiActions.FETCH_FAILED: {\n      return {\n        isLoading: false,\n        data: [],\n        error: payload,\n      };\n    }\n    default:\n      return newState;\n  }\n};\n\nexport default apiReducer;\n"]},"metadata":{},"sourceType":"module"}
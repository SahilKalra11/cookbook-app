{"ast":null,"code":"import Noty from \"noty\";\nimport Data from \"../import-data/data\";\nimport auth from \"../config/auth\";\nexport const userKey = auth.userKey;\nexport const IsLoggedIn = () => {\n  return ReadLocalStorage(userKey) != undefined;\n};\n_c = IsLoggedIn;\nexport const SetLocalStorage = (key, value) => {\n  localStorage.setItem(key, value);\n};\n_c2 = SetLocalStorage;\nexport const RemoveFromLocalStorage = key => [localStorage.removeItem(key)];\n_c3 = RemoveFromLocalStorage;\nexport const ReadLocalStorage = key => {\n  let result = localStorage.getItem(key);\n\n  if (result == undefined || result == null) {\n    return undefined;\n  } else {\n    return result;\n  }\n};\n_c4 = ReadLocalStorage;\nexport const NotificationHandler = (notyType, message) => {\n  const notification = new Noty({\n    type: notyType,\n    // layout: \"topCenter\",\n    text: `<h2 style = \"text-align:center\" >${message}</h2>`,\n    timeout: 2000\n  });\n  notification.show();\n};\n_c5 = NotificationHandler;\nexport const getAllData = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(Data));\n  });\n};\nexport const ValueFromUserData = key => {\n  let userData = ReadLocalStorage(userKey);\n\n  if (userData) {\n    userData = JSON.parse(userData);\n    return userData[key];\n  }\n\n  return \"\";\n};\n_c6 = ValueFromUserData;\nexport const LoginUser = cred => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!cred) {\n        return reject({\n          data: null,\n          message: \"Invalid User\"\n        });\n      }\n\n      const token = Math.random() * 10000;\n      cred = { ...cred,\n        token\n      };\n      SetLocalStorage(userKey, JSON.stringify(cred));\n      return resolve({\n        data: cred,\n        message: \"Successful\"\n      });\n    });\n  }, 1000);\n};\n_c7 = LoginUser;\nexport const getCred = () => {\n  let user = ReadLocalStorage(userKey);\n  user = JSON.parse(user);\n  return {\n    email: user.email,\n    token: user.token\n  };\n};\nexport const SignOut = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      return resolve(RemoveFromLocalStorage(userKey));\n    }, 1000);\n  });\n};\n_c8 = SignOut;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"IsLoggedIn\");\n$RefreshReg$(_c2, \"SetLocalStorage\");\n$RefreshReg$(_c3, \"RemoveFromLocalStorage\");\n$RefreshReg$(_c4, \"ReadLocalStorage\");\n$RefreshReg$(_c5, \"NotificationHandler\");\n$RefreshReg$(_c6, \"ValueFromUserData\");\n$RefreshReg$(_c7, \"LoginUser\");\n$RefreshReg$(_c8, \"SignOut\");","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/utility/generalMethods.js"],"names":["Noty","Data","auth","userKey","IsLoggedIn","ReadLocalStorage","undefined","SetLocalStorage","key","value","localStorage","setItem","RemoveFromLocalStorage","removeItem","result","getItem","NotificationHandler","notyType","message","notification","type","text","timeout","show","getAllData","Promise","resolve","reject","setTimeout","ValueFromUserData","userData","JSON","parse","LoginUser","cred","data","token","Math","random","stringify","getCred","user","email","SignOut"],"mappings":"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","sourcesContent":["import Noty from \"noty\";\nimport Data from \"../import-data/data\";\nimport auth from \"../config/auth\";\n\nexport const userKey = auth.userKey;\n\nexport const IsLoggedIn = () => {\n  return ReadLocalStorage(userKey) != undefined;\n};\n\nexport const SetLocalStorage = (key, value) => {\n  localStorage.setItem(key, value);\n};\n\nexport const RemoveFromLocalStorage = (key) => [localStorage.removeItem(key)];\n\nexport const ReadLocalStorage = (key) => {\n  let result = localStorage.getItem(key);\n  if (result == undefined || result == null) {\n    return undefined;\n  } else {\n    return result;\n  }\n};\n\nexport const NotificationHandler = (notyType, message) => {\n  const notification = new Noty({\n    type: notyType,\n    // layout: \"topCenter\",\n    text: `<h2 style = \"text-align:center\" >${message}</h2>`,\n    timeout: 2000,\n  });\n  notification.show();\n};\n\nexport const getAllData = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(Data));\n  });\n};\n\nexport const ValueFromUserData = (key) => {\n  let userData = ReadLocalStorage(userKey);\n\n  if (userData) {\n    userData = JSON.parse(userData);\n    return userData[key];\n  }\n\n  return \"\";\n};\n\nexport const LoginUser = (cred) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!cred) {\n        return reject({\n          data: null,\n          message: \"Invalid User\",\n        });\n      }\n\n      const token = Math.random() * 10000;\n\n      cred = {\n        ...cred,\n        token,\n      };\n\n      SetLocalStorage(userKey, JSON.stringify(cred));\n\n      return resolve({\n        data: cred,\n        message: \"Successful\",\n      });\n    });\n  }, 1000);\n};\n\nexport const getCred = () => {\n  let user = ReadLocalStorage(userKey);\n  user = JSON.parse(user);\n  return { email: user.email, token: user.token };\n};\n\nexport const SignOut = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      return resolve(RemoveFromLocalStorage(userKey));\n    }, 1000);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\cookbook-app\\\\cookbook-app\\\\src\\\\components\\\\recipes\\\\recipesList\\\\recipesList.js\";\nimport React, { Component } from \"react\";\nimport { fetchAllRecipes, MakeFavourite, RemoveFavourite } from \"../../../redux/reducers/recipesReducer\";\nimport { IsLoggedIn } from \"../../../utility/generalMethods\";\nimport SingleRecipe from \"../SingleRecipe/SingleRecipe\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\"; // import { getSingleRecipe } from \"../../../redux/reducers/recipesReducer\";\n\nclass RecipesList extends Component {\n  constructor(props) {\n    super(props);\n    this.history = this.props.history;\n    this.dispatch = this.props.dispatch;\n\n    this.onSearch = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n      let updatedRecipes = this.state.recipes;\n      updatedRecipes = updatedRecipes.filter(item => {\n        return item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filteredRecipes: updatedRecipes\n      });\n    };\n\n    this.toggleFavourite = id => {\n      const recipes = this.state.filteredRecipes; //FIRST METHOD TO FIND FAVOURITES\n\n      if (recipes && recipes.length) {\n        let Index = recipes.findIndex(val => val.id == id);\n\n        if (recipes[Index]) {\n          const {\n            isFavourite\n          } = recipes[Index];\n\n          if (isFavourite) {\n            this.props.RemoveFavourite(recipes[Index], id);\n          } else {\n            this.props.MakeFavourite(recipes[Index], id);\n          }\n\n          recipes[Index] = { ...recipes[Index],\n            isFavourite: !isFavourite\n          };\n          this.setState({\n            filteredRecipes: [...recipes]\n          });\n        }\n      }\n    };\n\n    this.loadRecipes = async () => {\n      await this.props.fetchingAllRecipes();\n\n      if (this.props.recipes && this.props.recipes.length) {\n        this.setState({\n          filteredRecipes: [...this.props.recipes],\n          recipes: [...this.props.recipes]\n        });\n      }\n    };\n\n    this.handleRedirection = id => {\n      this.history.push(`/recipes/view/${id}`);\n    };\n\n    this.state = {\n      searchText: \"\",\n      filteredRecipes: []\n    };\n  }\n\n  componentDidMount() {\n    if (!IsLoggedIn()) {\n      this.history.push(\"/auth/login\");\n    }\n\n    this.loadRecipes();\n  }\n\n  render() {\n    // console.log(\"recipes are \", this.props.recipes);\n    const {\n      recipes,\n      Api\n    } = this.props;\n    let {\n      searchText,\n      filteredRecipes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"row search-bar\",\n        style: {\n          background: url('../../images/login_banner.jpg')\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"text-center\",\n          children: \"CookBook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-search form-control-feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Search\",\n            onChange: this.onSearch,\n            value: searchText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Recipes main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"float-left\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-right\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"add-recipe-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => this.history.push(\"/recipes/add\"),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${process.env.PUBLIC_URL}/images/plus.png`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [Api.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 30\n          }, this) : null, filteredRecipes.length == 0 && !Api.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Records Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this) : filteredRecipes.map((recipe, idx) => {\n            return /*#__PURE__*/_createElement(SingleRecipe, { ...recipe,\n              toggleFavourite: this.toggleFavourite,\n              key: idx,\n              onClick: this.handleRedirection,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }\n            });\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes.recipes,\n    hasRecipes: state.recipes.hasRecipes,\n    Api: state.Api\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchingAllRecipes: () => dispatch(fetchAllRecipes()),\n  MakeFavourite: (recipe, id) => {\n    return dispatch(MakeFavourite(recipe, id));\n  },\n  RemoveFavourite: (recipe, id) => dispatch(RemoveFavourite(recipe, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RecipesList));","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/components/recipes/recipesList/recipesList.js"],"names":["React","Component","fetchAllRecipes","MakeFavourite","RemoveFavourite","IsLoggedIn","SingleRecipe","connect","withRouter","RecipesList","constructor","props","history","dispatch","onSearch","e","setState","searchText","target","value","updatedRecipes","state","recipes","filter","item","name","toLowerCase","search","filteredRecipes","toggleFavourite","id","length","Index","findIndex","val","isFavourite","loadRecipes","fetchingAllRecipes","handleRedirection","push","componentDidMount","render","Api","background","url","process","env","PUBLIC_URL","isLoading","map","recipe","idx","mapStateToProps","hasRecipes","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,eAHF,QAIO,wCAJP;AAKA,SAASC,UAAT,QAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAIlCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHnBC,OAGmB,GAHT,KAAKD,KAAL,CAAWC,OAGF;AAAA,SAFnBC,QAEmB,GAFR,KAAKF,KAAL,CAAWE,QAEH;;AAAA,SAQnBC,QARmB,GAQPC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AADT,OAAd;AAIA,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,OAAhC;AAEAF,MAAAA,cAAc,GAAGA,cAAc,CAACG,MAAf,CAAuBC,IAAD,IAAU;AAC/C,eACEA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,MAAxB,CAA+BZ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeO,WAAf,EAA/B,MAAiE,CAAC,CADpE;AAGD,OAJgB,CAAjB;AAMA,WAAKV,QAAL,CAAc;AAAEY,QAAAA,eAAe,EAAER;AAAnB,OAAd;AACD,KAtBkB;;AAAA,SAwBnBS,eAxBmB,GAwBAC,EAAD,IAAQ;AACxB,YAAMR,OAAO,GAAG,KAAKD,KAAL,CAAWO,eAA3B,CADwB,CAGxB;;AACA,UAAIN,OAAO,IAAIA,OAAO,CAACS,MAAvB,EAA+B;AAC7B,YAAIC,KAAK,GAAGV,OAAO,CAACW,SAAR,CAAmBC,GAAD,IAASA,GAAG,CAACJ,EAAJ,IAAUA,EAArC,CAAZ;;AAEA,YAAIR,OAAO,CAACU,KAAD,CAAX,EAAoB;AAClB,gBAAM;AAAEG,YAAAA;AAAF,cAAkBb,OAAO,CAACU,KAAD,CAA/B;;AAEA,cAAIG,WAAJ,EAAiB;AACf,iBAAKxB,KAAL,CAAWP,eAAX,CAA2BkB,OAAO,CAACU,KAAD,CAAlC,EAA2CF,EAA3C;AACD,WAFD,MAEO;AACL,iBAAKnB,KAAL,CAAWR,aAAX,CAAyBmB,OAAO,CAACU,KAAD,CAAhC,EAAyCF,EAAzC;AACD;;AAEDR,UAAAA,OAAO,CAACU,KAAD,CAAP,GAAiB,EAAE,GAAGV,OAAO,CAACU,KAAD,CAAZ;AAAqBG,YAAAA,WAAW,EAAE,CAACA;AAAnC,WAAjB;AAEA,eAAKnB,QAAL,CAAc;AACZY,YAAAA,eAAe,EAAE,CAAC,GAAGN,OAAJ;AADL,WAAd;AAGD;AACF;AACF,KA/CkB;;AAAA,SAyDnBc,WAzDmB,GAyDL,YAAY;AACxB,YAAM,KAAKzB,KAAL,CAAW0B,kBAAX,EAAN;;AAEA,UAAI,KAAK1B,KAAL,CAAWW,OAAX,IAAsB,KAAKX,KAAL,CAAWW,OAAX,CAAmBS,MAA7C,EAAqD;AACnD,aAAKf,QAAL,CAAc;AACZY,UAAAA,eAAe,EAAE,CAAC,GAAG,KAAKjB,KAAL,CAAWW,OAAf,CADL;AAEZA,UAAAA,OAAO,EAAE,CAAC,GAAG,KAAKX,KAAL,CAAWW,OAAf;AAFG,SAAd;AAID;AACF,KAlEkB;;AAAA,SAoEnBgB,iBApEmB,GAoEER,EAAD,IAAQ;AAC1B,WAAKlB,OAAL,CAAa2B,IAAb,CAAmB,iBAAgBT,EAAG,EAAtC;AACD,KAtEkB;;AAEjB,SAAKT,KAAL,GAAa;AACXJ,MAAAA,UAAU,EAAE,EADD;AAEXW,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AA2CDY,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAACnC,UAAU,EAAf,EAAmB;AACjB,WAAKO,OAAL,CAAa2B,IAAb,CAAkB,aAAlB;AACD;;AAED,SAAKH,WAAL;AACD;;AAiBDK,EAAAA,MAAM,GAAG;AACP;AAEA,UAAM;AAAEnB,MAAAA,OAAF;AAAWoB,MAAAA;AAAX,QAAmB,KAAK/B,KAA9B;AAEA,QAAI;AAAEM,MAAAA,UAAF;AAAcW,MAAAA;AAAd,QAAkC,KAAKP,KAA3C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,KAAK,EAAE;AAACsB,UAAAA,UAAU,EAACC,GAAG,CAAC,+BAAD;AAAf,SAA1C;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,WAAW,EAAC,QAHd;AAIE,YAAA,QAAQ,EAAE,KAAK9B,QAJjB;AAKE,YAAA,KAAK,EAAEG;AALT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,mBAAhB;AAAA,qCACE;AAAQ,gBAAA,OAAO,EAAGF,CAAD,IAAO,KAAKH,OAAL,CAAa2B,IAAb,CAAkB,cAAlB,CAAxB;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAG,GAAEM,OAAO,CAACC,GAAR,CAAYC,UAAW;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAA,qBACGL,GAAG,CAACM,SAAJ,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB,GAAoC,IADvC,EAEGpB,eAAe,CAACG,MAAhB,IAA0B,CAA1B,IAA+B,CAACW,GAAG,CAACM,SAApC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCpB,eAAe,CAACqB,GAAhB,CAAoB,CAACC,MAAD,EAASC,GAAT,KAAiB;AACnC,gCACE,eAAC,YAAD,OACMD,MADN;AAEE,cAAA,eAAe,EAAE,KAAKrB,eAFxB;AAGE,cAAA,GAAG,EAAEsB,GAHP;AAIE,cAAA,OAAO,EAAE,KAAKb,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,WATD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AAnIiC;;AAsIpC,MAAMc,eAAe,GAAI/B,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcA,OADlB;AAEL+B,IAAAA,UAAU,EAAEhC,KAAK,CAACC,OAAN,CAAc+B,UAFrB;AAGLX,IAAAA,GAAG,EAAErB,KAAK,CAACqB;AAHN,GAAP;AAKD,CAND;;AAQA,MAAMY,kBAAkB,GAAIzC,QAAD,KAAe;AACxCwB,EAAAA,kBAAkB,EAAE,MAAMxB,QAAQ,CAACX,eAAe,EAAhB,CADM;AAExCC,EAAAA,aAAa,EAAE,CAAC+C,MAAD,EAASpB,EAAT,KAAgB;AAC7B,WAAOjB,QAAQ,CAACV,aAAa,CAAC+C,MAAD,EAASpB,EAAT,CAAd,CAAf;AACD,GAJuC;AAKxC1B,EAAAA,eAAe,EAAE,CAAC8C,MAAD,EAASpB,EAAT,KAAgBjB,QAAQ,CAACT,eAAe,CAAC8C,MAAD,EAASpB,EAAT,CAAhB;AALD,CAAf,CAA3B;;AAQA,eAAevB,OAAO,CACpB6C,eADoB,EAEpBE,kBAFoB,CAAP,CAGb9C,UAAU,CAACC,WAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  fetchAllRecipes,\n  MakeFavourite,\n  RemoveFavourite,\n} from \"../../../redux/reducers/recipesReducer\";\nimport { IsLoggedIn } from \"../../../utility/generalMethods\";\nimport SingleRecipe from \"../SingleRecipe/SingleRecipe\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n// import { getSingleRecipe } from \"../../../redux/reducers/recipesReducer\";\n\nclass RecipesList extends Component {\n  history = this.props.history;\n  dispatch = this.props.dispatch;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: \"\",\n      filteredRecipes: [],\n    };\n  }\n\n  onSearch = (e) => {\n    this.setState({\n      searchText: e.target.value,\n    });\n\n    let updatedRecipes = this.state.recipes;\n\n    updatedRecipes = updatedRecipes.filter((item) => {\n      return (\n        item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1\n      );\n    });\n\n    this.setState({ filteredRecipes: updatedRecipes });\n  };\n\n  toggleFavourite = (id) => {\n    const recipes = this.state.filteredRecipes;\n\n    //FIRST METHOD TO FIND FAVOURITES\n    if (recipes && recipes.length) {\n      let Index = recipes.findIndex((val) => val.id == id);\n\n      if (recipes[Index]) {\n        const { isFavourite } = recipes[Index];\n\n        if (isFavourite) {\n          this.props.RemoveFavourite(recipes[Index], id);\n        } else {\n          this.props.MakeFavourite(recipes[Index], id);\n        }\n\n        recipes[Index] = { ...recipes[Index], isFavourite: !isFavourite };\n\n        this.setState({\n          filteredRecipes: [...recipes],\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    if (!IsLoggedIn()) {\n      this.history.push(\"/auth/login\");\n    }\n\n    this.loadRecipes();\n  }\n\n  loadRecipes = async () => {\n    await this.props.fetchingAllRecipes();\n\n    if (this.props.recipes && this.props.recipes.length) {\n      this.setState({\n        filteredRecipes: [...this.props.recipes],\n        recipes: [...this.props.recipes],\n      });\n    }\n  };\n\n  handleRedirection = (id) => {\n    this.history.push(`/recipes/view/${id}`);\n  };\n\n  render() {\n    // console.log(\"recipes are \", this.props.recipes);\n\n    const { recipes, Api } = this.props;\n\n    let { searchText, filteredRecipes } = this.state;\n\n    return (\n      <div className=\"root\">\n        <header className=\"row search-bar\" style={{background:url('../../images/login_banner.jpg')}}>\n            <h3 class=\"text-center\">CookBook</h3>\n          <div className=\"form-group\">\n            <span className=\"fa fa-search form-control-feedback\"></span>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              onChange={this.onSearch}\n              value={searchText}\n            />\n          </div>\n        </header>\n        <div className=\"Recipes main\">\n          <div className=\"heading\">\n            <span className=\"float-left\">\n              <h3>Recipes</h3>\n            </span>\n            <div className=\"float-right\">\n              <span className=\"add-recipe-button\">\n                <button onClick={(e) => this.history.push(\"/recipes/add\")}>\n                  <img src={`${process.env.PUBLIC_URL}/images/plus.png`} />\n                </button>\n              </span>\n            </div>\n          </div>\n          <ul>\n            {Api.isLoading ? <p>Loading...</p> : null}\n            {filteredRecipes.length == 0 && !Api.isLoading ? (\n              <p>No Records Found</p>\n            ) : (\n              filteredRecipes.map((recipe, idx) => {\n                return (\n                  <SingleRecipe\n                    {...recipe}\n                    toggleFavourite={this.toggleFavourite}\n                    key={idx}\n                    onClick={this.handleRedirection}\n                  />\n                );\n              })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes.recipes,\n    hasRecipes: state.recipes.hasRecipes,\n    Api: state.Api,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchingAllRecipes: () => dispatch(fetchAllRecipes()),\n  MakeFavourite: (recipe, id) => {\n    return dispatch(MakeFavourite(recipe, id));\n  },\n  RemoveFavourite: (recipe, id) => dispatch(RemoveFavourite(recipe, id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(RecipesList));\n"]},"metadata":{},"sourceType":"module"}
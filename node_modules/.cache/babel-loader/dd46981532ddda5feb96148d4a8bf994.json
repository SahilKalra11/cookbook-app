{"ast":null,"code":"import * as yup from \"yup\";\nexport const AddRecipeSchema = yup.object().shape({\n  Name: yup.string().min(2).max(100).required(\"Please Enter your Name\"),\n  imageUrl: yup.string().required(\"please upload image recipe\"),\n  Ingredients: yup.array().of(yup.string()).min(1).max(40).required(\"Please Enter Ingredients\"),\n  Cooktime: yup.number().min(1).max(200).required(\"Please Enter Cooktime\").positive(),\n  Serving: yup.number().min(1).max(10).required(\"Please Enter Serving Per Person\").positive(),\n  votes: yup.number().min(1).max(5).required(\"Please Enter vote count\").positive(),\n  Description: yup.string().min(3).required(\"Please Enter description\"),\n  prepSteps: yup.array().of(yup.string()).required(\"Please Enter Preparation Steps\")\n});\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is a required field\"),\n  password: yup.string().required(\"Please enter your password\").min(3).max(20)\n});\nexport const validateInputs = async (name, value, errors) => {\n  let errorObj = {\n    isError: false,\n    errorMessage: \"\"\n  };\n\n  switch (name) {\n    case \"Name\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"Ingredients\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"Cooktime\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"Serving\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"votes\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"Description\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"prepSteps\":\n      {\n        await yup.reach(AddRecipeSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"email\":\n      {\n        await yup.reach(loginSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    case \"password\":\n      {\n        await yup.reach(loginSchema, name).validate(value).catch(err => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0]\n          };\n        });\n        break;\n      }\n\n    default:\n      {\n        errorObj = { ...errorObj,\n          isError: false,\n          errorMessage: \"\"\n        };\n      }\n  }\n\n  return errorObj;\n};\nexport const validateSchema = async (schema, data) => {\n  let errorObj = {\n    isError: false,\n    errorMessage: \"\"\n  };\n\n  if (schema && data) {\n    await schema.validate(data).catch(err => {\n      errorObj = { ...errorObj,\n        isError: true,\n        errorMessage: err.errors\n      };\n    });\n  }\n\n  return errorObj;\n};","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/utility/validation.js"],"names":["yup","AddRecipeSchema","object","shape","Name","string","min","max","required","imageUrl","Ingredients","array","of","Cooktime","number","positive","Serving","votes","Description","prepSteps","loginSchema","email","password","validateInputs","name","value","errors","errorObj","isError","errorMessage","reach","validate","catch","err","validateSchema","schema","data"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,eAAe,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChDC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,CAAsC,wBAAtC,CAD0C;AAEhDC,EAAAA,QAAQ,EAAET,GAAG,CAACK,MAAJ,GAAaG,QAAb,CAAsB,4BAAtB,CAFsC;AAGhDE,EAAAA,WAAW,EAAEV,GAAG,CACbW,KADU,GAEVC,EAFU,CAEPZ,GAAG,CAACK,MAAJ,EAFO,EAGVC,GAHU,CAGN,CAHM,EAIVC,GAJU,CAIN,EAJM,EAKVC,QALU,CAKD,0BALC,CAHmC;AAShDK,EAAAA,QAAQ,EAAEb,GAAG,CACVc,MADO,GAEPR,GAFO,CAEH,CAFG,EAGPC,GAHO,CAGH,GAHG,EAIPC,QAJO,CAIE,uBAJF,EAKPO,QALO,EATsC;AAehDC,EAAAA,OAAO,EAAEhB,GAAG,CACTc,MADM,GAENR,GAFM,CAEF,CAFE,EAGNC,GAHM,CAGF,EAHE,EAINC,QAJM,CAIG,iCAJH,EAKNO,QALM,EAfuC;AAqBhDE,EAAAA,KAAK,EAAEjB,GAAG,CACPc,MADI,GAEJR,GAFI,CAEA,CAFA,EAGJC,GAHI,CAGA,CAHA,EAIJC,QAJI,CAIK,yBAJL,EAKJO,QALI,EArByC;AA2BhDG,EAAAA,WAAW,EAAElB,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBE,QAApB,CAA6B,0BAA7B,CA3BmC;AA4BhDW,EAAAA,SAAS,EAAEnB,GAAG,CACXW,KADQ,GAERC,EAFQ,CAELZ,GAAG,CAACK,MAAJ,EAFK,EAIRG,QAJQ,CAIC,gCAJD;AA5BqC,CAAnB,CAAxB;AAmCP,OAAO,MAAMY,WAAW,GAAGpB,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC5CkB,EAAAA,KAAK,EAAErB,GAAG,CAACK,MAAJ,GAAagB,KAAb,GAAqBb,QAArB,CAA8B,2BAA9B,CADqC;AAE5Cc,EAAAA,QAAQ,EAAEtB,GAAG,CAACK,MAAJ,GAAaG,QAAb,CAAsB,4BAAtB,EAAoDF,GAApD,CAAwD,CAAxD,EAA2DC,GAA3D,CAA+D,EAA/D;AAFkC,CAAnB,CAApB;AAKP,OAAO,MAAMgB,cAAc,GAAG,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,MAApB,KAA+B;AAC3D,MAAIC,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,KADI;AAEbC,IAAAA,YAAY,EAAE;AAFD,GAAf;;AAIA,UAAQL,IAAR;AACE,SAAK,MAAL;AAAa;AACX,cAAMxB,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,OAAL;AAAc;AACZ,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,cAAM1B,GAAG,CACN8B,KADG,CACG7B,eADH,EACoBuB,IADpB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,OAAL;AAAc;AACZ,cAAM1B,GAAG,CACN8B,KADG,CACGV,WADH,EACgBI,IADhB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD,SAAK,UAAL;AAAiB;AACf,cAAM1B,GAAG,CACN8B,KADG,CACGV,WADH,EACgBI,IADhB,EAEHO,QAFG,CAEMN,KAFN,EAGHO,KAHG,CAGIC,GAAD,IAAS;AACdN,UAAAA,QAAQ,GAAG;AACTC,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,YAAY,EAAEI,GAAG,CAACP,MAAJ,CAAW,CAAX;AAFL,WAAX;AAID,SARG,CAAN;AASA;AACD;;AACD;AAAS;AACPC,QAAAA,QAAQ,GAAG,EACT,GAAGA,QADM;AAETC,UAAAA,OAAO,EAAE,KAFA;AAGTC,UAAAA,YAAY,EAAE;AAHL,SAAX;AAKD;AAnHH;;AAsHA,SAAOF,QAAP;AACD,CA5HM;AA8HP,OAAO,MAAMO,cAAc,GAAG,OAAOC,MAAP,EAAeC,IAAf,KAAwB;AACpD,MAAIT,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,KADI;AAEbC,IAAAA,YAAY,EAAE;AAFD,GAAf;;AAKA,MAAIM,MAAM,IAAIC,IAAd,EAAoB;AAClB,UAAMD,MAAM,CAACJ,QAAP,CAAgBK,IAAhB,EAAsBJ,KAAtB,CAA6BC,GAAD,IAAS;AACzCN,MAAAA,QAAQ,GAAG,EACT,GAAGA,QADM;AAETC,QAAAA,OAAO,EAAE,IAFA;AAGTC,QAAAA,YAAY,EAAEI,GAAG,CAACP;AAHT,OAAX;AAKD,KANK,CAAN;AAOD;;AACD,SAAOC,QAAP;AACD,CAhBM","sourcesContent":["import * as yup from \"yup\";\n\nexport const AddRecipeSchema = yup.object().shape({\n  Name: yup.string().min(2).max(100).required(\"Please Enter your Name\"),\n  imageUrl: yup.string().required(\"please upload image recipe\"),\n  Ingredients: yup\n    .array()\n    .of(yup.string())\n    .min(1)\n    .max(40)\n    .required(\"Please Enter Ingredients\"),\n  Cooktime: yup\n    .number()\n    .min(1)\n    .max(200)\n    .required(\"Please Enter Cooktime\")\n    .positive(),\n  Serving: yup\n    .number()\n    .min(1)\n    .max(10)\n    .required(\"Please Enter Serving Per Person\")\n    .positive(),\n  votes: yup\n    .number()\n    .min(1)\n    .max(5)\n    .required(\"Please Enter vote count\")\n    .positive(),\n  Description: yup.string().min(3).required(\"Please Enter description\"),\n  prepSteps: yup\n    .array()\n    .of(yup.string())\n\n    .required(\"Please Enter Preparation Steps\"),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email is a required field\"),\n  password: yup.string().required(\"Please enter your password\").min(3).max(20),\n});\n\nexport const validateInputs = async (name, value, errors) => {\n  let errorObj = {\n    isError: false,\n    errorMessage: \"\",\n  };\n  switch (name) {\n    case \"Name\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"Ingredients\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"Cooktime\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"Serving\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"votes\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"Description\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"prepSteps\": {\n      await yup\n        .reach(AddRecipeSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"email\": {\n      await yup\n        .reach(loginSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    case \"password\": {\n      await yup\n        .reach(loginSchema, name)\n        .validate(value)\n        .catch((err) => {\n          errorObj = {\n            isError: true,\n            errorMessage: err.errors[0],\n          };\n        });\n      break;\n    }\n    default: {\n      errorObj = {\n        ...errorObj,\n        isError: false,\n        errorMessage: \"\",\n      };\n    }\n  }\n\n  return errorObj;\n};\n\nexport const validateSchema = async (schema, data) => {\n  let errorObj = {\n    isError: false,\n    errorMessage: \"\",\n  };\n\n  if (schema && data) {\n    await schema.validate(data).catch((err) => {\n      errorObj = {\n        ...errorObj,\n        isError: true,\n        errorMessage: err.errors,\n      };\n    });\n  }\n  return errorObj;\n};\n"]},"metadata":{},"sourceType":"module"}
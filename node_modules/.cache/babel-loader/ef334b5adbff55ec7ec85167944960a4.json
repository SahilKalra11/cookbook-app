{"ast":null,"code":"import { API_BASE } from \"./Endpoints\";\nimport axios from \"axios\";\nexport const GetAllData = async endpoint => {\n  if (!endpoint) {\n    return;\n  }\n\n  const response = await axios.get(`${API_BASE}/${endpoint}`);\n  return {\n    data: response.data,\n    messsage: response.message ? response.message : \"\"\n  };\n};\n_c = GetAllData;\nexport const GetSingleData = async (endpoint, id) => {\n  if (!endpoint) {\n    return;\n  }\n\n  if (!id) {\n    return;\n  }\n\n  const response = await axios.get(`${API_BASE}/${endpoint}/${id}`);\n  return {\n    data: response.data,\n    messsage: response.message ? response.message : \"\"\n  };\n};\n_c2 = GetSingleData;\nexport const PostData = async (endpoint, body) => {\n  if (!endpoint) {\n    return;\n  }\n\n  if (!body) {\n    return;\n  }\n\n  const response = await axios.post(`${API_BASE}/${endpoint}`, body);\n  return {\n    data: response.data,\n    messsage: response.message ? response.message : \"\"\n  };\n};\n_c3 = PostData;\nexport const PutData = async (endpoint, id, body) => {\n  if (!endpoint) {\n    return;\n  }\n\n  if (!id || !body) {\n    return;\n  }\n\n  const response = await axios.put(`${API_BASE}/${endpoint}/${id}`, body);\n  return {\n    data: response.data,\n    messsage: response.message ? response.message : \"\"\n  };\n};\n_c4 = PutData;\nexport const DeleteData = async (endpoint, id) => {\n  if (!endpoint) {\n    return;\n  }\n\n  if (!id) {\n    return;\n  }\n\n  const response = await axios.delete(`${API_BASE}/${endpoint}/${id}`);\n  return {\n    data: response.data,\n    messsage: response.message ? response.message : \"\"\n  };\n};\n_c5 = DeleteData;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GetAllData\");\n$RefreshReg$(_c2, \"GetSingleData\");\n$RefreshReg$(_c3, \"PostData\");\n$RefreshReg$(_c4, \"PutData\");\n$RefreshReg$(_c5, \"DeleteData\");","map":{"version":3,"sources":["E:/cookbook-app/cookbook-app/src/utility/apiService.js"],"names":["API_BASE","axios","GetAllData","endpoint","response","get","data","messsage","message","GetSingleData","id","PostData","body","post","PutData","put","DeleteData","delete"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAC5C,MAAI,CAACA,QAAL,EAAe;AACb;AACD;;AACD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEL,QAAS,IAAGG,QAAS,EAAlC,CAAvB;AACA,SAAO;AACLG,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADV;AAELC,IAAAA,QAAQ,EAAEH,QAAQ,CAACI,OAAT,GAAmBJ,QAAQ,CAACI,OAA5B,GAAsC;AAF3C,GAAP;AAID,CATM;KAAMN,U;AAWb,OAAO,MAAMO,aAAa,GAAG,OAAON,QAAP,EAAiBO,EAAjB,KAAwB;AACnD,MAAI,CAACP,QAAL,EAAe;AACb;AACD;;AACD,MAAI,CAACO,EAAL,EAAS;AACP;AACD;;AACD,QAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEL,QAAS,IAAGG,QAAS,IAAGO,EAAG,EAAxC,CAAvB;AACA,SAAO;AACLJ,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADV;AAELC,IAAAA,QAAQ,EAAEH,QAAQ,CAACI,OAAT,GAAmBJ,QAAQ,CAACI,OAA5B,GAAsC;AAF3C,GAAP;AAID,CAZM;MAAMC,a;AAcb,OAAO,MAAME,QAAQ,GAAG,OAAOR,QAAP,EAAiBS,IAAjB,KAA0B;AAChD,MAAI,CAACT,QAAL,EAAe;AACb;AACD;;AACD,MAAI,CAACS,IAAL,EAAW;AACT;AACD;;AACD,QAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAN,CAAY,GAAEb,QAAS,IAAGG,QAAS,EAAnC,EAAsCS,IAAtC,CAAvB;AACA,SAAO;AACLN,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADV;AAELC,IAAAA,QAAQ,EAAEH,QAAQ,CAACI,OAAT,GAAmBJ,QAAQ,CAACI,OAA5B,GAAsC;AAF3C,GAAP;AAID,CAZM;MAAMG,Q;AAcb,OAAO,MAAMG,OAAO,GAAG,OAAOX,QAAP,EAAiBO,EAAjB,EAAqBE,IAArB,KAA8B;AACnD,MAAI,CAACT,QAAL,EAAe;AACb;AACD;;AACD,MAAI,CAACO,EAAD,IAAO,CAACE,IAAZ,EAAkB;AAChB;AACD;;AAED,QAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAN,CAAW,GAAEf,QAAS,IAAGG,QAAS,IAAGO,EAAG,EAAxC,EAA2CE,IAA3C,CAAvB;AAEA,SAAO;AACLN,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADV;AAELC,IAAAA,QAAQ,EAAEH,QAAQ,CAACI,OAAT,GAAmBJ,QAAQ,CAACI,OAA5B,GAAsC;AAF3C,GAAP;AAID,CAdM;MAAMM,O;AAgBb,OAAO,MAAME,UAAU,GAAG,OAAOb,QAAP,EAAiBO,EAAjB,KAAwB;AAChD,MAAI,CAACP,QAAL,EAAe;AACb;AACD;;AAED,MAAI,CAACO,EAAL,EAAS;AACP;AACD;;AACD,QAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAN,CAAc,GAAEjB,QAAS,IAAGG,QAAS,IAAGO,EAAG,EAA3C,CAAvB;AACA,SAAO;AACLJ,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IADV;AAELC,IAAAA,QAAQ,EAAEH,QAAQ,CAACI,OAAT,GAAmBJ,QAAQ,CAACI,OAA5B,GAAsC;AAF3C,GAAP;AAID,CAbM;MAAMQ,U","sourcesContent":["import { API_BASE } from \"./Endpoints\";\r\nimport axios from \"axios\";\r\n\r\nexport const GetAllData = async (endpoint) => {\r\n  if (!endpoint) {\r\n    return;\r\n  }\r\n  const response = await axios.get(`${API_BASE}/${endpoint}`);\r\n  return {\r\n    data: response.data,\r\n    messsage: response.message ? response.message : \"\",\r\n  };\r\n};\r\n\r\nexport const GetSingleData = async (endpoint, id) => {\r\n  if (!endpoint) {\r\n    return;\r\n  }\r\n  if (!id) {\r\n    return;\r\n  }\r\n  const response = await axios.get(`${API_BASE}/${endpoint}/${id}`);\r\n  return {\r\n    data: response.data,\r\n    messsage: response.message ? response.message : \"\",\r\n  };\r\n};\r\n\r\nexport const PostData = async (endpoint, body) => {\r\n  if (!endpoint) {\r\n    return;\r\n  }\r\n  if (!body) {\r\n    return;\r\n  }\r\n  const response = await axios.post(`${API_BASE}/${endpoint}`, body);\r\n  return {\r\n    data: response.data,\r\n    messsage: response.message ? response.message : \"\",\r\n  };\r\n};\r\n\r\nexport const PutData = async (endpoint, id, body) => {\r\n  if (!endpoint) {    \r\n    return;\r\n  }\r\n  if (!id || !body) {\r\n    return;\r\n  }\r\n\r\n  const response = await axios.put(`${API_BASE}/${endpoint}/${id}`, body);\r\n\r\n  return {\r\n    data: response.data,\r\n    messsage: response.message ? response.message : \"\",\r\n  };\r\n};\r\n\r\nexport const DeleteData = async (endpoint, id) => {\r\n  if (!endpoint) {\r\n    return;\r\n  }\r\n\r\n  if (!id) {\r\n    return;\r\n  }\r\n  const response = await axios.delete(`${API_BASE}/${endpoint}/${id}`);\r\n  return {\r\n    data: response.data,\r\n    messsage: response.message ? response.message : \"\",\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}